--bg parralax control
local TAG = "bg.script: "
local random = require "main/random"
require "main/varibles"

local click_count = 0
local control_count = 1 --number of clicks, when planet will create
local planets_count = 0

function init(self)
	msg.post(".", "acquire_input_focus")
	math.randomseed(os.clock()*100000000000)
	particlefx.play("/bg#stars")
end

function on_message(self, message_id, message, sender)
	if message_id == hash("boost") then
		particlefx.play("/bg#bonus")
	end

	if message_id == hash("boost_end") then
		particlefx.stop("/bg#bonus")
	end

	if message_id == hash("decrease_planets") then
		
		local url = message[1]
		local flag = false
		for i = 1, table.maxn(PLANETS_IDS) do
			if url == PLANETS_IDS[i] and not flag then
				table.remove(PLANETS_IDS, i)
				flag = true
			end
		end
		
		planets_count = planets_count - 1
	end
end

function on_input(self, action_id, action)
	if action_id == hash("touch") and action.pressed then
		click_count = click_count + 1
		if click_count >= control_count then
			local scale = math.random(1300, 2500) / 1000
			
			--setup position
			local position
			if random.random(1, 2) == 1 then
				position = vmath.vector3(math.random(5, 100), 1350, 1)
			else
				position = vmath.vector3(math.random(550, 650), 1350, 1)
			end

			--create new bg planet
			if planets_count <= 1 then
				local id = factory.create("/bg#bg_factory", position, nil, nil, scale)
				local url = msg.url("game", id, "bg_item")
				table.insert(PLANETS_IDS, url)
				planets_count = planets_count + 1
			end

			--url for sprite
			local url = msg.url(piece)
			url.fragment = "sprite"
					
			--number of clicks for creating new planet
			control_count = scale * 10 + 5 + random.random(1, 5)
			if control_count < 17 then
				control_count = 17
			end

			click_count = 0
		end
	end	
end

function on_reload(self)
	-- Add reload-handling code here
	-- Remove this function if not needed
end
