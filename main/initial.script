local TAG = "initial.script"

require "main/varibles"
local defsave = require("defsave.defsave")
local filename = "config"
local admob_init = false

function save()
	defsave.set(filename, "money", {MONEY})
	defsave.set(filename, "best_score", {BEST_SCORE})

	defsave.set(filename, "money_per_click_count", {MONEY_PER_CLICK_COUNT})
	defsave.set(filename, "points_per_click_count", {POINTS_PER_CLICK_COUNT})
	defsave.set(filename, "second_life_count", {SECOND_LIFE_COUNT})
	defsave.set(filename, "boost_count", {BOOST_COUNT})
	defsave.set(filename, "autopilot_count", {AUTOPILOT_COUNT})
	defsave.set(filename, "engines_count", {ENGINES_COUNT})
	defsave.set(filename, "rockets_count", {ROCKETS_COUNT})

	defsave.set(filename, "money_per_click_cost", {MONEY_PER_CLICK_COST})
	defsave.set(filename, "points_per_click_cost", {POINTS_PER_CLICK_COST})
	defsave.set(filename, "second_life_cost", {SECOND_LIFE_COST})
	defsave.set(filename, "boost_cost", {BOOST_COST})
	defsave.set(filename, "autopilot_cost", {AUTOPILOT_COST})
	defsave.set(filename, "engines_cost", {ENGINES_COST})
	defsave.set(filename, "rockets_cost", {ROCKETS_COST})
	defsave.set(filename, "rockets_best_score", {ROCKETS_BEST_SCORE})

	defsave.set(filename, "opened_rockets", {OPENED_ROCKETS})

	defsave.set(filename, "is_sound", {IS_SOUND})
	defsave.set(filename, "is_vibration", {IS_VIBRATION})

	defsave.save(filename)
end

local function admob_listener(event)
	print(TAG, "admob event type", event.type)
	print(TAG, "admob event phase", event.phase)

	if event.phase == 'init' then 
		admob_init = true
		admob.load{
			type = 'banner',
			id = "ca-app-pub-3825550765420734/6655086030",
			size = 'smart',
			position = 'bottom',
			keywords = {'puzzle', 'game'}
		}
		admob.load{
			type = 'interstitial',
			id = 'ca-app-pub-3825550765420734/6419507656',
			immersive = true,
			keywords = {'action', 'game'}
		}

		admob.load{
			type = 'rewarded',
			id = 'ca-app-pub-3825550765420734/7463102373',
			immersive = true,
			keywords = {'action', 'game'}
		}
	end

	if event.type == 'rewarded' and event.phase == 'rewarded' then
		msg.post("game:/bonus_driver#bonus_driver", "ads_bonus")
		admob.load{
			type = 'rewarded',
			id = 'ca-app-pub-3825550765420734/7463102373',
			immersive = true,
			keywords = {'space', 'game'}
		}
	end

	if event.type == 'rewarded' and event.phase == 'closed' then
		admob.load{
			type = 'rewarded',
			id = 'ca-app-pub-3825550765420734/7463102373',
			immersive = true,
			keywords = {'space', 'game'}
		}
	end

	if event.type == 'interstitial' and event.phase == 'opened' then
		admob.load{
			type = 'interstitial',
			id = 'ca-app-pub-3825550765420734/6419507656',
			immersive = true,
			keywords = {'space', 'game'}
		}
	end
end

function init(self)
	admob.init({
		app_id = "ca-app-pub-3825550765420734~4555019385",
		test = false,
		listener = admob_listener
	})

	monarch = require "monarch.monarch"
	monarch.show("menu_screen")
	particlefx.play("/initial#stars")

	local position = vmath.vector3(0, 0, 0)
	factory.create("/initial#bg_image_factory", position, nil, nil, scale)


	defsave.appname = "ElonNeedsHelp"
	defsave.load(filename)

	--WORK WITH SAVING
	local money = defsave.get(filename, "money")
	local best_score = defsave.get(filename, "best_score")

	local money_per_click_count  = defsave.get(filename, "money_per_click_count")
	local points_per_click_count = defsave.get(filename, "points_per_click_count")
	local second_life_count = defsave.get(filename, "second_life_count")
	local boost_count = defsave.get(filename, "boost_count")
	local autopilot_count = defsave.get(filename, "autopilot_count")
	local engines_count = defsave.get(filename, "engines_count")
	local rockets_count = defsave.get(filename, "rockets_count")

	local money_per_click_cost = defsave.get(filename, "money_per_click_cost")
	local points_per_click_cost = defsave.get(filename, "points_per_click_cost")
	local second_life_cost = defsave.get(filename, "second_life_cost")
	local boost_cost = defsave.get(filename, "boost_cost")
	local autopilot_cost = defsave.get(filename, "autopilot_cost")
	local engines_cost = defsave.get(filename, "engines_cost")
	local rockets_cost = defsave.get(filename, "rockets_cost")
	local rockets_best_score = defsave.get(filename, "rockets_best_score")

	local opened_rockets = defsave.get(filename, "opened_rockets")

	local is_sound = defsave.get(filename, "is_sound")
	local is_vibration = defsave.get(filename, "is_vibration")
	
	if money ~= nil and best_score ~= nil and money_per_click_count ~= nil 
	and points_per_click_count ~= nil
	and second_life_count ~= nil and boost_count ~= nil and autopilot_count ~= nil
	and engines_count ~= nil and rockets_count ~= nil 
	and money_per_click_cost ~= nil and points_per_click_cost ~= nil
	and second_life_cost ~= nil and boost_cost ~= nil
	and autopilot_cost ~= nil and engines_cost ~= nil and rockets_cost ~= nil
	and opened_rockets ~= nil and rockets_best_score ~= nil 
	and is_sound ~= nil and is_vibration ~= nil then
		print(TAG, "file exist")
		
		if table.maxn(money) ~= 0 and table.maxn(best_score) ~= 0 
		and table.maxn(money_per_click_count) ~= 0 and table.maxn(second_life_count) ~= 0 
		and table.maxn(points_per_click_count) ~= 0
		and table.maxn(boost_count) ~= 0 and table.maxn(autopilot_count) ~= 0
		and table.maxn(engines_count) ~= 0 and table.maxn(rockets_count) ~= 0 
		and table.maxn(money_per_click_cost) ~= 0 and table.maxn(second_life_cost) ~= 0 
		and table.maxn(points_per_click_cost) ~= 0
		and table.maxn(boost_cost) ~= 0 and table.maxn(autopilot_cost) ~= 0 
		and table.maxn(engines_cost) ~= 0 and table.maxn(rockets_cost) ~= 0
		and table.maxn(opened_rockets) ~= 0 and table.maxn(rockets_best_score) ~= 0
		and table.maxn(is_sound) ~= 0 and table.maxn(is_vibration) ~= 0 then

			print(TAG, "data exist")
			
			MONEY = money[1]
			BEST_SCORE = best_score[1]

			MONEY_PER_CLICK_COUNT = money_per_click_count[1]
			POINTS_PER_CLICK_COUNT = points_per_click_count[1]
			SECOND_LIFE_COUNT = second_life_count[1]
			BOOST_COUNT = boost_count[1]
			AUTOPILOT_COUNT = autopilot_count[1]
			ENGINES_COUNT = engines_count[1]
			ROCKETS_COUNT = rockets_count[1]

			MONEY_PER_CLICK_COST = money_per_click_cost[1]
			POINTS_PER_CLICK_COST = points_per_click_cost[1]
			SECOND_LIFE_COST = second_life_cost[1]
			BOOST_COST = boost_cost[1]
			AUTOPILOT_COST = autopilot_cost[1]
			ENGINES_COST = engines_cost[1]
			ROCKETS_COST = rockets_cost[1]
			ROCKETS_BEST_SCORE = rockets_best_score[1]

			OPENED_ROCKETS = opened_rockets[1]

			IS_SOUND = is_sound[1]
			IS_VIBRATION = is_vibration[1]
		else
			save()
			print(TAG, "data not exist, set default data")
		end
	else
		save()
		print(TAG, "nothing exist, save")
	end

	if IS_SOUND then
		msg.post("main:/sound#back_sound", "play_sound")
		IS_PLAYING = true
	end
	
end

function final(self)
	save()
	defsave.save_all(true)
end

function on_message(self, message_id, message, sender)
	if message_id == hash("save") then
		print(TAG, "save message")
		save()
	end

	if message_id == hash("create_bg_image") then
		local position = vmath.vector3(0, 124, 0)
		local id = factory.create("/initial#bg_image_factory", position, nil, nil, scale)
		local url = msg.url(main, id, "bg_image")
		BG_IMAGE_ID = url
	end

	if message_id == hash("show_banner") then
		if admob_init then
			admob.load{
				type = 'banner',
				id = "ca-app-pub-3825550765420734/6655086030",
				size = 'smart',
				position = 'bottom',
				keywords = {'puzzle', 'game'}
			}
		end
	end

end