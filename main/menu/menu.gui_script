require "main/varibles"
local TAG = "menu.gui_script: "

local gooey = require "gooey.gooey"
local monarch = require "monarch.monarch"
local transitions = require "monarch.transitions.gui"

local function start_pressed(button)
	monarch.show("game_screen")
	if IS_SOUND then
		msg.post("main:/sound#click_sound", "play_sound")
	end
end

local function shop_pressed(button)
	monarch.show("shop_screen")
	if IS_SOUND then
		msg.post("main:/sound#click_sound", "play_sound")
	end
end

local function start_update(button)
	if button.pressed_now then
		gui.play_flipbook(button.node, hash("custom_button_pressed"))
	elseif button.released_now then
		gui.play_flipbook(button.node, hash("custom_button_idle"))
	elseif not button.pressed and button.over_now then
		gui.play_flipbook(button.node, hash("custom_button_pressed"))
	elseif not button.pressed and button.out_now then
		gui.play_flipbook(button.node, hash("custom_button_idle"))
	end
end

local function shop_update(button)
	if button.pressed_now then
		gui.play_flipbook(button.node, hash("custom_button_pressed"))
	elseif button.released_now then
		gui.play_flipbook(button.node, hash("custom_button_idle"))
	elseif not button.pressed and button.over_now then
		gui.play_flipbook(button.node, hash("custom_button_pressed"))
	elseif not button.pressed and button.out_now then
		gui.play_flipbook(button.node, hash("custom_button_idle"))
	end
end

function init(self)
	gooey.acquire_input()
	
	self.transition1 = transitions.create(gui.get_node("start"))
	.show_in(transitions.scale_in, gui.EASING_OUTQUAD, 0.6, 0)
	.show_out(transitions.slide_out_right, gui.EASING_INQUAD, 0.6, 0)
	.back_in(transitions.slide_in_left, gui.EASING_OUTQUAD, 0.6, 0)
	.back_out(transitions.slide_out_right, gui.EASING_INQUAD, 0.6, 0)

	self.transition2 = transitions.create(gui.get_node("menu_header"))
	.show_in(transitions.scale_in, gui.EASING_OUTQUAD, 0.6, 0)
	.show_out(transitions.slide_out_left, gui.EASING_INQUAD, 0.6, 0)
	.back_in(transitions.slide_in_left, gui.EASING_OUTQUAD, 0.6, 0)
	.back_out(transitions.slide_out_left, gui.EASING_INQUAD, 0.6, 0)

	self.transition3 = transitions.create(gui.get_node("shop"))
	.show_in(transitions.scale_in, gui.EASING_OUTQUAD, 0.6, 0)
	.show_out(transitions.slide_out_left, gui.EASING_INQUAD, 0.6, 0)
	.back_in(transitions.slide_in_left, gui.EASING_OUTQUAD, 0.6, 0)
	.back_out(transitions.slide_out_left, gui.EASING_INQUAD, 0.6, 0)

	self.transition4 = transitions.create(gui.get_node("money"))
	.show_in(transitions.scale_in, gui.EASING_OUTQUAD, 0.6, 0)
	.show_out(transitions.slide_out_left, gui.EASING_INQUAD, 0.6, 0)
	.back_in(transitions.slide_in_left, gui.EASING_OUTQUAD, 0.6, 0)
	.back_out(transitions.slide_out_left, gui.EASING_INQUAD, 0.6, 0)

	self.transition5 = transitions.create(gui.get_node("best_score"))
	.show_in(transitions.scale_in, gui.EASING_OUTQUAD, 0.6, 0)
	.show_out(transitions.slide_out_left, gui.EASING_INQUAD, 0.6, 0)
	.back_in(transitions.slide_in_left, gui.EASING_OUTQUAD, 0.6, 0)
	.back_out(transitions.slide_out_left, gui.EASING_INQUAD, 0.6, 0)

	self.money = gui.get_node("money")
	self.best = gui.get_node("best_score")
	gui.set_text(self.money, "money: " .. MONEY)
	gui.set_text(self.best, "best: " .. BEST_SCORE)

end

function on_message(self, message_id, message, sender)
	self.transition1.handle(message_id, message, sender)
	self.transition2.handle(message_id, message, sender)
	self.transition3.handle(message_id, message, sender)
	 self.transition4.handle(message_id, message, sender)
	self.transition5.handle(message_id, message, sender)
	
	if message_id == monarch.TRANSITION.DONE and message.transition == monarch.TRANSITION.SHOW_IN then
		msg.post("main:/initial#initial", "show_banner")
	end
end

function on_input(self, action_id, action)
	gooey.button("start_bg", action_id, action, start_pressed, start_update)
	gooey.button("shop_bg", action_id, action, shop_pressed, shop_update)
end
